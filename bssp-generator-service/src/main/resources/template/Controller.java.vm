package ${package}.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.entity.${className}DO;
import ${package}.dto.${className}DTO;
import ${package}.service.${className}Service;
import ${package}.convert.${className}DoConvert;
import com.cloud.bssp.util.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * Description: ${comments}
 * Create Date: ${date}
 * Modified By：<br>
 * Modified Date：<br>
 * Why & What is modified：<br>
 *
 * @author ${author}
 * @version ${version}
 */
@Api(tags = "${comments}")
@RestController
@RequestMapping("/${pathName}")
@AllArgsConstructor
public class ${className}Controller {

    /**
     * ${className}Service
     */
    private ${className}Service ${classname}Service;

    /**
     * 分页列表
     * @param ${classname}DTO
     * @return
     */
    @ApiOperation(value = "分页列表")
    @PostMapping("/pageList")
    public R pageList(@RequestBody ${className}DTO ${classname}DTO) {
        QueryWrapper<${className}DO> queryWrapper = new QueryWrapper<>(${className}DoConvert.dtoToDo(${classname}DTO));
        Page<${className}DO> page = new Page<>(${classname}DTO.getPage(), ${classname}DTO.getLimit());
        Page<${className}DO> pageList = ${classname}Service.page(page, queryWrapper);
        return R.success(${className}DoConvert.pageConvert(pageList));
    }

    /**
     * list列表
     * @param ${classname}DTO
     * @return
     */
    @ApiOperation(value = "list列表")
    @PostMapping("/list")
    public R list(@RequestBody ${className}DTO ${classname}DTO) {
        QueryWrapper<${className}DO> queryWrapper = new QueryWrapper<>(${className}DoConvert.dtoToDo(${classname}DTO));
        List<${className}DO> ${classname}List = ${classname}Service.list(queryWrapper);
        return R.success(${className}DoConvert.listConvert(${classname}List));
    }

    /**
     * 根据主键查询
     * @param ${pk.attrname}
     * @return
     */
    @ApiOperation(value = "根据主键查询")
    @GetMapping("/info/getBy${pk.attrName}")
    public R info(@RequestParam("${pk.attrname}")Long ${pk.attrname}) {
            ${className}DO ${classname} = ${classname}Service.getById(id);
        return R.success(${className}DoConvert.doToDto(${classname}));
    }

    /**
     * 新增
     * @param ${classname}DTO
     * @return
     */
    @ApiOperation(value = "新增")
    @PostMapping("/save")
    public R save(@RequestBody ${className}DTO ${classname}DTO) {
        boolean flag = ${classname}Service.save(${className}DoConvert.dtoToDo(${classname}DTO));
        if (flag) {
            return R.success();
        }
        return R.failed();
    }

    /**
     * 更新
     * @param ${classname}DTO
     * @return
     */
    @ApiOperation(value = "更新")
    @PostMapping("/update")
    public R update(@RequestBody ${className}DTO ${classname}DTO) {
        boolean flag = ${classname}Service.updateById(${className}DoConvert.dtoToDo(${classname}DTO));
        if (flag) {
            return R.success();
        }
        return R.failed();
    }
}
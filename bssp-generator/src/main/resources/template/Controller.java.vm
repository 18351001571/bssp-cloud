package ${package}.controller;

import java.util.List;
import java.util.Map;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.cloud.bssp.data.util.PageUtil;
import com.cloud.bssp.util.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.GetMapping;
import ${package}.entity.${className}DO;
import ${package}.service.${className}Service;

/**
 * <p>
 * $!{className} Controller控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "${comments}")
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {

    /**
     * ${className}Service
     */
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 分页列表
     * @param params
     * @return
     */
    @ApiOperation(value = "分页列表")
    @PostMapping("/pageList")
    public R pageList(@RequestBody Map<String,Object> params) {
        QueryWrapper<${className}DO> queryWrapper =  new QueryWrapper<>();
        //默认按照id倒序
        queryWrapper.orderByDesc("id");
        Page<${className}DO> page = PageUtil.getPageInfo(params);
        Page<${className}DO> pageList = sysMenuService.page(page,queryWrapper);
        return R.success(pageList);
    }

    /**
     * list列表
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "list列表")
    @PostMapping("/list")
    public R list(@RequestBody ${className}DO ${classname}) {
        QueryWrapper<${className}DO> queryWrapper = new QueryWrapper<>(${classname});
        List<${className}DO> ${classname}List = ${classname}Service.list(queryWrapper);
        return R.success(${classname}List);
    }

    /**
     * 根据主键查询
     * @param ${pk.attrname}
     * @return
     */
    @ApiOperation(value = "根据主键查询")
    @GetMapping("/info/getBy${pk.attrName}")
    public R info(@RequestParam("${pk.attrname}") Long ${pk.attrname}) {
        ${className}DO ${classname} = ${classname}Service.getById(${pk.attrname});
        return R.success(${classname});
    }

    /**
     * 新增
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "新增")
    @PostMapping("/save")
    public R save(@RequestBody ${className}DO ${classname}) {
        boolean flag = ${classname}Service.save(${classname});
        if (flag) {
            return R.success();
        }
        return R.failed();
    }

    /**
     * 更新
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "更新")
    @PostMapping("/update")
    public R update(@RequestBody ${className}DO ${classname}) {
        boolean flag = ${classname}Service.updateById(${classname});
        if (flag) {
            return R.success();
        }
        return R.failed();
    }
}